{"version":3,"file":"static/js/33.a3d0b547.chunk.js","mappings":"iQAGaA,EAAQC,EAAAA,GAAAA,GAAH,2GAOLC,EAAaD,EAAAA,GAAAA,OAAH,4LAWVE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,mLAeRI,EAAcJ,EAAAA,GAAAA,IAAH,2CAKXK,EAAaL,EAAAA,GAAAA,IAAH,8CAKVM,EAAON,EAAAA,GAAAA,IAAH,+JAMJO,EAAYP,EAAAA,GAAAA,IAAH,oF,oCC0CtB,EA7EqB,SAAfQ,IAAsB,IAAD,IACzB,GAA4CC,EAAAA,EAAAA,UAAS,CAAC,GAAtD,eAAOC,EAAP,KAAuBC,EAAvB,KAGA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAGMC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,oBAAGJ,EAASK,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcN,GAASO,MAAK,SAAAC,GAC1Bb,EAAkBa,EACnB,GACF,GAAE,CAACR,IAEJ,IAAQS,EACNf,EADMe,YAAaC,EACnBhB,EADmBgB,SAAUC,EAC7BjB,EAD6BiB,eAAgBC,EAC7ClB,EAD6CkB,aAAcC,EAC3DnB,EAD2DmB,OAG3D,OAAKrB,GAMH,6BACE,SAACP,EAAD,CAAY6B,KAAK,SAAjB,UACE,UAAC5B,EAAD,CAAU6B,GAAIb,EAAd,WACE,SAAC,MAAD,CAAac,KAAM,KAAM,eAKpCxB,IACC,iCAAE,UAACF,EAAD,YACM,SAACF,EAAD,WACE,gBACE6B,IAAKR,EAAW,yCACsBA,GADtB,2BAGhBS,IAAKP,OAGT,UAACtB,EAAD,YACE,SAACN,EAAD,UAAQ4B,KACR,UAACpB,EAAD,WAAW,eAAa4B,KAAKC,MAAqB,GAAfR,GAAmB,QACtD,SAACrB,EAAD,UAAW,cACX,yBAAImB,EAAS,QACb,SAACnB,EAAD,UAAW,YAEX,wBACGsB,GACCA,EAAOQ,KAAI,SAAAC,GAAK,OAAI,wBAAoBA,EAAMC,MAAjBD,EAAME,GAAnB,aAGjB,SAACzC,EAAD,UAAO,4BAA8B,SAACO,EAAD,WACxC,2BACE,yBACE,SAAC,KAAD,CAAMyB,GAAG,OAAOZ,OAAK,UAAOL,EAASK,OAArC,SAA8C,YAEhD,yBACE,SAAC,KAAD,CAAMY,GAAG,UAAUZ,OAAK,UAAOL,EAASK,OAAxC,SAAiD,uBAMxDP,IAAS,uBAAG,sDACb,SAAC,EAAA6B,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACA,SAAC,KAAD,SAjDK9B,GAAS,EAsDrB,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link} from \"react-router-dom\";\n\nexport const Title = styled.h2`\n  font-size: 25px;\n  font-weight: 600;\n  margin-top: 40px;\n  margin-bottom: 0;\n`;\n\nexport const ButtonBack = styled.button`\n  margin-top: 16px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  border: none;\n  margin-bottom: 10px;\n  font-weight: 500;\n  background-color: transparent;\n\n`;\n\nexport const LinkBack = styled(Link)`\ndisplay: flex;\nalign-items: center;\ntext-align: center;\ntext-decoration: none;\ncolor: black;\ngap: 10px;\n\n&:hover {\n    color: orangered;\n\n  }\n\n`;\n\nexport const MoviePoster = styled.div`\ndisplay: block;\n\n`;\n\nexport const AboutMovie = styled.div`\nmargin-left: 20px;\n\n`;\n\nexport const Wrap = styled.div`\ndisplay: flex;\nbox-shadow: rgba(50, 50, 93, 0.25) 0px 20px 10px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;\nmargin-bottom: 20px;\n`;\n\nexport const TitleList = styled.div`\nfont-size: 18px;\nmargin-top: 20px;\nfont-weight: 500px;\n\n`;\n","import { Suspense, useEffect, useState } from 'react';\n\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  AboutMovie,\n  ButtonBack,\n  LinkBack,\n  MoviePoster,\n  Title,\n  TitleList,\n  Wrap,\n} from './MovieDetails.styled';\n\nimport { MdArrowBack } from 'react-icons/md';\nimport { getMoviesById } from 'fetchApi/getMovies';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [detailsOfMovie, setDetailsOfMovie] = useState({});\n  //  -------при null не ренд. сторінка-----------\n  // const [detailsOfMovie, setDetailsOfMovie] = useState(null);\n  const [error, setError] = useState(null);\n\n\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMoviesById(movieId).then(data => {\n      setDetailsOfMovie(data);\n    });\n  }, [movieId]);\n\n  const { poster_path, overview, original_title, vote_average, genres } =\n    detailsOfMovie;\n\n    if (!MovieDetails) {\n      return setError(true)\n    }\n\n  return (\n   \n      <main>\n        <ButtonBack type=\"button\">\n          <LinkBack to={backLinkHref}>\n            <MdArrowBack size={15} />\n            Go back\n          </LinkBack>\n        </ButtonBack>\n      \n{MovieDetails &&      \n  <><Wrap>\n          <MoviePoster>\n            <img\n              src={poster_path\n                ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                : `https://gdr.one/simg/400`}\n              alt={original_title} />\n          </MoviePoster>\n\n          <AboutMovie>\n            <Title>{original_title}</Title>\n            <TitleList>User score: {Math.round(vote_average * 10)}%</TitleList>\n            <TitleList>Overview</TitleList>\n            <p>{overview} </p>\n            <TitleList>Genres</TitleList>\n\n            <ul>\n              {genres &&\n                genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n            </ul>\n          </AboutMovie>\n        </Wrap><Title>Additional information</Title><Wrap>\n            <ul>\n              <li>\n                <Link to=\"cast\" state={{ ...location.state }}>Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\" state={{ ...location.state }}> Reviews</Link>\n              </li>\n            </ul>\n          </Wrap></>}\n\n\n        {error && <p>'The resource you requested could not be found.'</p>}\n        <Suspense fallback={<Loader />}>\n        <Outlet />\n        </Suspense>\n      </main>\n   \n  );\n};\nexport default MovieDetails;\n"],"names":["Title","styled","ButtonBack","LinkBack","Link","MoviePoster","AboutMovie","Wrap","TitleList","MovieDetails","useState","detailsOfMovie","setDetailsOfMovie","error","setError","location","useLocation","movieId","useParams","backLinkHref","state","from","useEffect","getMoviesById","then","data","poster_path","overview","original_title","vote_average","genres","type","to","size","src","alt","Math","round","map","genre","name","id","Suspense","fallback","Loader"],"sourceRoot":""}