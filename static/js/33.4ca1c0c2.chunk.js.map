{"version":3,"file":"static/js/33.4ca1c0c2.chunk.js","mappings":"wPAGaA,EAAQC,EAAAA,GAAAA,GAAH,2GAOLC,EAAaD,EAAAA,GAAAA,OAAH,4LAWVE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,mLAeRI,EAAcJ,EAAAA,GAAAA,IAAH,2CAKXK,EAAaL,EAAAA,GAAAA,IAAH,8CAKVM,EAAON,EAAAA,GAAAA,IAAH,+JAMJO,EAAYP,EAAAA,GAAAA,IAAH,oF,oCCuCtB,EA1EqB,WAAO,IAAD,IACzB,GAA4CQ,EAAAA,EAAAA,UAAS,CAAC,GAAtD,eAAOC,EAAP,KAAuBC,EAAvB,KAEMC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,oBAAGJ,EAASK,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcN,GAASO,MAAK,SAAAC,GAC1BX,EAAkBW,EACnB,GACF,GAAE,CAACR,IAEJ,IAAQS,EACNb,EADMa,YAAaC,EACnBd,EADmBc,SAAUC,EAC7Bf,EAD6Be,eAAgBC,EAC7ChB,EAD6CgB,aAAcC,EAC3DjB,EAD2DiB,OAG7D,OACE,SAAC,EAAAC,SAAD,CAAUC,UAAW,SAACC,EAAA,EAAD,IAArB,UACA,6BACE,SAAC5B,EAAD,CAAY6B,KAAK,SAAjB,UACE,UAAC5B,EAAD,CAAU6B,GAAMhB,EAAhB,WACE,SAAC,MAAD,CAAaiB,KAAM,KAAM,gBAK7B,UAAC1B,EAAD,YACE,SAACF,EAAD,WACE,gBACE6B,IACEX,EAAW,yCACyBA,GADzB,2BAMbY,IAAKV,OAIT,UAACnB,EAAD,YACE,SAACN,EAAD,UAAQyB,KACR,UAACjB,EAAD,WAAW,eAAa4B,KAAKC,MAAqB,GAAfX,GAAmB,QACtD,SAAClB,EAAD,UAAW,cACX,yBAAIgB,EAAS,QACb,SAAChB,EAAD,UAAW,YAEX,wBACGmB,GACCA,EAAOW,KAAI,SAAAC,GAAK,OAAI,wBAAoBA,EAAMC,MAAjBD,EAAME,GAAnB,aAIxB,SAACzC,EAAD,UAAO,4BACP,SAACO,EAAD,WACE,2BACE,yBACE,SAAC,KAAD,CAAMyB,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,qBAKzB,SAAC,KAAD,QAOL,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link} from \"react-router-dom\";\n\nexport const Title = styled.h2`\n  font-size: 25px;\n  font-weight: 600;\n  margin-top: 40px;\n  margin-bottom: 0;\n`;\n\nexport const ButtonBack = styled.button`\n  margin-top: 16px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  border: none;\n  margin-bottom: 10px;\n  font-weight: 500;\n  background-color: transparent;\n\n`;\n\nexport const LinkBack = styled(Link)`\ndisplay: flex;\nalign-items: center;\ntext-align: center;\ntext-decoration: none;\ncolor: black;\ngap: 10px;\n\n&:hover {\n    color: orangered;\n\n  }\n\n`;\n\nexport const MoviePoster = styled.div`\ndisplay: block;\n\n`;\n\nexport const AboutMovie = styled.div`\nmargin-left: 20px;\n\n`;\n\nexport const Wrap = styled.div`\ndisplay: flex;\nbox-shadow: rgba(50, 50, 93, 0.25) 0px 20px 10px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;\nmargin-bottom: 20px;\n`;\n\nexport const TitleList = styled.div`\nfont-size: 18px;\nmargin-top: 20px;\nfont-weight: 500px;\n\n`;\n","import { Suspense, useEffect, useState } from 'react';\n\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  AboutMovie,\n  ButtonBack,\n  LinkBack,\n  MoviePoster,\n  Title,\n  TitleList,\n  Wrap,\n} from './MovieDetails.styled';\n\nimport { MdArrowBack } from 'react-icons/md';\nimport { getMoviesById } from 'fetchApi/getMovies';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [detailsOfMovie, setDetailsOfMovie] = useState({});\n\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMoviesById(movieId).then(data => {\n      setDetailsOfMovie(data);\n    });\n  }, [movieId]);\n\n  const { poster_path, overview, original_title, vote_average, genres } =\n    detailsOfMovie;\n\n  return (\n    <Suspense fallback= {<Loader/>}>\n    <main>\n      <ButtonBack type=\"button\">\n        <LinkBack to = {backLinkHref}>\n          <MdArrowBack size={15} />\n          Go back\n        </LinkBack>\n      </ButtonBack>\n\n      <Wrap>\n        <MoviePoster>\n          <img\n            src={\n              poster_path ? (\n                `https://image.tmdb.org/t/p/w300${poster_path}`\n              ) : (\n                `https://gdr.one/simg/400`\n              )\n            }\n            alt={original_title}\n          />\n        </MoviePoster>\n\n        <AboutMovie>\n          <Title>{original_title}</Title>\n          <TitleList>User score: {Math.round(vote_average * 10)}%</TitleList>\n          <TitleList>Overview</TitleList>\n          <p>{overview} </p>\n          <TitleList>Genres</TitleList>\n\n          <ul>\n            {genres &&\n              genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n          </ul>\n        </AboutMovie>\n      </Wrap>\n      <Title>Additional information</Title>\n      <Wrap>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\"> Reviews</Link>\n          </li>\n        </ul>\n      </Wrap>\n\n      <Outlet />\n\n    </main>\n\n    </Suspense>\n\n  );\n};\nexport default MovieDetails;\n"],"names":["Title","styled","ButtonBack","LinkBack","Link","MoviePoster","AboutMovie","Wrap","TitleList","useState","detailsOfMovie","setDetailsOfMovie","location","useLocation","movieId","useParams","backLinkHref","state","from","useEffect","getMoviesById","then","data","poster_path","overview","original_title","vote_average","genres","Suspense","fallback","Loader","type","to","size","src","alt","Math","round","map","genre","name","id"],"sourceRoot":""}