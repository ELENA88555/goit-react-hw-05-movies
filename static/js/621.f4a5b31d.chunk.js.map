{"version":3,"file":"static/js/621.f4a5b31d.chunk.js","mappings":"iOAEaA,EAAaC,EAAAA,GAAAA,KAAH,sEAKVC,EAAQD,EAAAA,GAAAA,MAAH,yOAiBLE,EAAeF,EAAAA,GAAAA,OAAH,mX,kBCUzB,EA9BkB,SAAC,GAAwB,IAAvBG,EAAsB,EAAtBA,iBAElB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OACE,0BACE,UAACP,EAAD,CAAYQ,SAAUJ,EAAtB,WACE,SAACF,EAAD,CACEO,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,WAAS,EACTN,MAAOA,EACPO,SAlBkB,SAACC,GACzB,IAAMC,EAAaD,EAAME,cAAcV,MACtC,GAAyB,KAArBS,EAAWE,OACb,OAAOC,QAAQC,IAAI,cACnBZ,EAAUQ,EAEb,KAcI,SAACZ,EAAD,CAAcM,KAAK,SAAnB,SAA4B,eAInC,E,iBC4BD,EAtDe,WAAO,IAAD,EACnB,GAAwCW,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAAsCnB,EAAAA,EAAAA,UAAS,IAA/C,eAAOoB,EAAP,KAAoBC,EAApB,KACA,GAA0BrB,EAAAA,EAAAA,WAAS,GAAnC,eAAOsB,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACM,KAAVN,IAIJO,EAAAA,EAAAA,IAAeP,GAAOQ,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC5B,GAAwB,KAAnBA,EAAQC,OAEX,OADAL,GAAS,GACFV,QAAQC,IAAI,wCAGrB,IAAMe,EAAS,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAASG,KACzB,YACE,MAAO,CACLC,GAF2C,EAA5CA,GAGCC,eAH2C,EAAxCA,eAIHC,YAJ2C,EAAxBA,YAKnB5B,KAL2C,EAAXA,KAOnC,IAGHgB,EAAeQ,GACfN,GAAS,EACV,GACF,GAAE,CAACL,IAWJ,OACE,SAAC,EAAAgB,SAAD,WACE,4BACE,SAAC,EAAD,CAAW/B,SAZQ,SAAAM,GACvBA,EAAM0B,iBACN,IAAMC,EAAO3B,EAAME,cAEnBM,EAAgB,CAAEC,MAAOkB,EAAKC,SAASnB,MAAMjB,QAC7CY,QAAQC,IAAII,GACZkB,EAAKE,OACN,IAOMhB,IAAS,uBAAG,2CACb,SAACiB,EAAA,EAAD,CAAYC,OAAQpB,QAI3B,C","sources":["components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const FormSearch = styled.form`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 30px;\n\n  padding: 0 10px 0 10px;\n  margin-right: 15px;\n\n  border: 1px solid black;\n  outline: none;\n  border-radius: 5px;\n\n  :hover {\n   border: 1px solid orangered;\n  }\n`;\n\n\nexport const ButtonSubmit = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100px;\n  height: 30px;\n  margin-bottom: 30px;\n\n  font-size: 15px;\n  font-family: inherit;\n  border: 1px solid black;\n\n  color: black;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n\n  :hover {\n   border: 1px solid orangered;\n  \n  }`","\nimport { ButtonSubmit, FormSearch, Input } from './SearchBar.styled';\nimport { useState } from 'react';\n\nconst SearchBar = ({handleSubmitForm}) => {\n\n  const [value, setValue] = useState('');\n\n  const handleChangetForm = (event)=> {\n    const inputValue = event.currentTarget.value\n     if (inputValue.trim() ===\"\") {\n       return console.log('NO RESULTS');\n     } setValue( inputValue);\n \n   };\n\n\n  return (\n    <div>\n      <FormSearch onSubmit={handleSubmitForm}>\n        <Input\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          autoFocus\n          value={value}\n          onChange={handleChangetForm }\n        />\n        <ButtonSubmit type=\"submit\">Search</ButtonSubmit>\n      </FormSearch>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import { getSesrchMovie } from 'fetchApi/getMovies';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { Suspense, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n  const [queryMovies, setqueryMovies] = useState([]);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    getSesrchMovie(query).then(({ results }) => {\n      if (!results.length === 0) {\n        setError(true);\n        return console.log('There is no movies with this request');\n      }\n\n      const moviesArr = results?.map(\n        ({ id, original_title, poster_path, name }) => {\n          return {\n            id,\n            original_title,\n            poster_path,\n            name,\n          };\n        }\n      );\n\n      setqueryMovies(moviesArr);\n      setError(false);\n    });\n  }, [query]);\n\n  const handleSubmitForm = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    setSearchParams({ query: form.elements.query.value });\n    console.log(query);\n    form.reset();\n  };\n\n  return (\n    <Suspense>\n      <div>\n        <SearchBar onSubmit={handleSubmitForm}></SearchBar>\n\n        {error && <p>There is no movies with this request.</p>}\n        <MoviesList movies={queryMovies}></MoviesList>\n      </div>\n    </Suspense>\n  );\n};\nexport default Movies;\n"],"names":["FormSearch","styled","Input","ButtonSubmit","handleSubmitForm","useState","value","setValue","onSubmit","type","name","autoComplete","autoFocus","onChange","event","inputValue","currentTarget","trim","console","log","useSearchParams","searchParams","setSearchParams","query","get","queryMovies","setqueryMovies","error","setError","useEffect","getSesrchMovie","then","results","length","moviesArr","map","id","original_title","poster_path","Suspense","preventDefault","form","elements","reset","MoviesList","movies"],"sourceRoot":""}